@page "/create-customer"

@using CRM.DTOs.CustomerDTOs
@using Microsoft.AspNetCore.DataProtection
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components;
@using CRM.AppWebBlazor.Data;

@if (isSuccess == false && isError == false)
{
    <h3>Crear Nuevo Cliente</h3>

    <EditForm Model="customer" OnValidSubmit="Create">
        <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="row">
                <div class="col-12" >
                    <div class="form-group">
                        <label for="Name">Nombre:</label>
                        <InputText class="form-control" id="Name" @bind-Value="customer.Name"></InputText>
                        <ValidationMessage For="() => customer.Name"></ValidationMessage>
                    </div>
                </div>
                <div class="col-4">
                    <div class="form-group">
                        <label for="LastName">Apellido:</label>
                        <InputText class="form-control" id="LastName" @bind-Value="customer.LastName"> </InputText>
                        <ValidationMessage For="() => customer.LastName"></ValidationMessage>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-12">
                    <div class="form-group" >
                        <label for="Address">Direccion:</label>
                        <InputTextArea class="form-control" id="Address" @bind-Value="customer.Address"></InputTextArea>
                        <ValidationMessage For="() => customer.Address"></ValidationMessage>
                    </div>
                </div>
            </div>
            <br />
            <div class="row">
                <div class="col-12">
                    <button type="submit" class="btn btn-primary">Guardar</button>
                    <NavLink href="/customer-list" class="btn btn-secondary">Cancelar</NavLink>
                </div>
            </div>
    </EditForm>
}
else if (isSuccess)
{
    customer = new CreateCustomerDTO();
    isError = false;
    <p class="alert alert-success">Cliente creado con exito</p>
    <button type="button" @onclick="GoCreate" class="btn btn-primary">Ir a crear</button>
    <NavLink href="/customer-list" class="btn btn-primary">Ir a buscar CLientes</NavLink>
}
else if (isError)
{
    <p class="alert-success">sucedio un error al intentar registrar</p>
    <NavLink href="/customer-list" class="btn btn-primary">Aceptar</NavLink>
}

@code {
    //inyeccion de dependencia de customerServices para acceder a sus metodos
    [Inject]
    CustomerService customerService { get; set; }

    //Creacion de una instancia de createcustomerdto para crear un cliente
    CreateCustomerDTO customer = new CreateCustomerDTO();
    bool isSuccess = false;//variable para rastrear si la operacion fue exitosa
    bool isError = false;//variable para rastrear si se produjo un error

    private async Task Create()
    {
        //llama al metodo create de customerservice para crear un cliente
        int result = await customerService.Create(customer);
        if (result != 0)//comprueba si el resultado de la operacion es diferente de 0 
            isSuccess = true;
        else
            isError = true;
    }

    private void GoCreate()
    {
        isSuccess = false;
        isError = false;
    }
}
